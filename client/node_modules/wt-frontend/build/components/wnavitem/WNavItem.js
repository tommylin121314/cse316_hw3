"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _clsx5 = _interopRequireDefault(require("clsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//import "./wnavitem.scss";
function WNavItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      onClick = _ref.onClick,
      color = _ref.color,
      hoverAnimation = _ref.hoverAnimation,
      clickAnimation = _ref.clickAnimation,
      other = _objectWithoutProperties(_ref, ["children", "className", "onClick", "color", "hoverAnimation", "clickAnimation"]);

  var classes = (0, _clsx5.default)(className, color, _defineProperty({}, "hover-" + hoverAnimation, hoverAnimation), _defineProperty({}, "click-" + clickAnimation, clickAnimation));

  if (hoverAnimation === "lighten" || hoverAnimation === "darken") {
    classes = (0, _clsx5.default)(className, color, _defineProperty({}, "hover-transparent-" + hoverAnimation, hoverAnimation), _defineProperty({}, "click-" + clickAnimation, clickAnimation));
  }

  return /*#__PURE__*/_react.default.createElement("li", _extends({
    onClick: onClick,
    className: "wnavitem ".concat(classes)
  }, other), children);
}

;
var _default = WNavItem;
exports.default = _default;