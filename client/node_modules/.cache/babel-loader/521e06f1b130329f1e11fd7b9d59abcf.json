{"ast":null,"code":"var _jsxFileName = \"/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/sidebar/SidebarEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { WNavItem, WInput } from 'wt-frontend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarEntry = props => {\n  _s();\n\n  const [editing, toggleEditing] = useState(false);\n  const [preEdit, setPreEdit] = useState(props.name);\n\n  const handleEditing = e => {\n    e.stopPropagation();\n    setPreEdit(props.name);\n    toggleEditing(!editing);\n  };\n\n  const handleSubmit = e => {\n    handleEditing(e);\n    const {\n      name,\n      value\n    } = e.target;\n    props.updateListField(props._id, name, value, preEdit);\n  };\n\n  const entryStyle = props.id === props.activeid ? 'list-item list-item-active' : 'list-item ';\n  return /*#__PURE__*/_jsxDEV(WNavItem, {\n    className: entryStyle,\n    onDoubleClick: handleEditing,\n    onClick: () => {\n      props.handleSetActive(props.id);\n    },\n    hoverAnimation: \"lighten\",\n    children: editing ? /*#__PURE__*/_jsxDEV(WInput, {\n      className: \"list-item-edit\",\n      inputClass: \"list-item-edit-input\",\n      wType: \"lined\",\n      barAnimation: \"solid\",\n      name: \"name\",\n      onBlur: handleSubmit,\n      autoFocus: true,\n      defaultValue: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-text\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SidebarEntry, \"gdwUyTCoMddtBXh5k3gasDBj4g4=\");\n\n_c = SidebarEntry;\nexport default SidebarEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarEntry\");","map":{"version":3,"sources":["/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/sidebar/SidebarEntry.js"],"names":["React","useState","WNavItem","WInput","SidebarEntry","props","editing","toggleEditing","preEdit","setPreEdit","name","handleEditing","e","stopPropagation","handleSubmit","value","target","updateListField","_id","entryStyle","id","activeid","handleSetActive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,aAAjC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACI,KAAK,CAACK,IAAP,CAAtC;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,eAAF;AACAJ,IAAAA,UAAU,CAACJ,KAAK,CAACK,IAAP,CAAV;AACAH,IAAAA,aAAa,CAAC,CAACD,OAAF,CAAb;AACH,GAJD;;AAMA,QAAMQ,YAAY,GAAIF,CAAD,IAAO;AACxBD,IAAAA,aAAa,CAACC,CAAD,CAAb;AACA,UAAM;AAAEF,MAAAA,IAAF;AAAQK,MAAAA;AAAR,QAAkBH,CAAC,CAACI,MAA1B;AACAX,IAAAA,KAAK,CAACY,eAAN,CAAsBZ,KAAK,CAACa,GAA5B,EAAiCR,IAAjC,EAAuCK,KAAvC,EAA8CP,OAA9C;AACH,GAJD;;AAMA,QAAMW,UAAU,GAAGd,KAAK,CAACe,EAAN,KAAaf,KAAK,CAACgB,QAAnB,GAA8B,4BAA9B,GAA6D,YAAhF;AAEA,sBACI,QAAC,QAAD;AACI,IAAA,SAAS,EAAEF,UADf;AAC2B,IAAA,aAAa,EAAER,aAD1C;AAEI,IAAA,OAAO,EAAE,MAAM;AAAEN,MAAAA,KAAK,CAACiB,eAAN,CAAsBjB,KAAK,CAACe,EAA5B;AAAiC,KAFtD;AAEwD,IAAA,cAAc,EAAC,SAFvE;AAAA,cAKQd,OAAO,gBAAG,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,UAAU,EAAC,sBAA9C;AAAqE,MAAA,KAAK,EAAC,OAA3E;AAAmF,MAAA,YAAY,EAAC,OAAhG;AAAwG,MAAA,IAAI,EAAC,MAA7G;AAAoH,MAAA,MAAM,EAAEQ,YAA5H;AAA0I,MAAA,SAAS,EAAE,IAArJ;AAA2J,MAAA,YAAY,EAAET,KAAK,CAACK;AAA/K;AAAA;AAAA;AAAA;AAAA,YAAH,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKL,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA;AANhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/BD;;GAAMN,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import React, { useState }  from 'react';\nimport { WNavItem, WInput } from 'wt-frontend';\n\nconst SidebarEntry = (props) => {\n    const [editing, toggleEditing] = useState(false);\n    const [preEdit, setPreEdit] = useState(props.name);\n\n    const handleEditing = (e) => {\n        e.stopPropagation();\n        setPreEdit(props.name);\n        toggleEditing(!editing);\n    };\n\n    const handleSubmit = (e) => {\n        handleEditing(e);\n        const { name, value } = e.target;\n        props.updateListField(props._id, name, value, preEdit);\n    };\n\n    const entryStyle = props.id === props.activeid ? 'list-item list-item-active' : 'list-item ';\n    \n    return (\n        <WNavItem \n            className={entryStyle} onDoubleClick={handleEditing} \n            onClick={() => { props.handleSetActive(props.id) }} hoverAnimation=\"lighten\"\n        >\n            {\n                editing ? <WInput className=\"list-item-edit\" inputClass=\"list-item-edit-input\" wType=\"lined\" barAnimation=\"solid\" name='name' onBlur={handleSubmit} autoFocus={true} defaultValue={props.name} />\n                    :   <div className='list-text'>\n                            {props.name}\n                        </div>\n            }\n        </WNavItem>\n    );\n};\n\nexport default SidebarEntry;"]},"metadata":{},"sourceType":"module"}