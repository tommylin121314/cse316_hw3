{"ast":null,"code":"var _jsxFileName = \"/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/homescreen/Homescreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Logo from '../navbar/Logo';\nimport NavbarOptions from '../navbar/NavbarOptions';\nimport MainContents from '../main/MainContents';\nimport SidebarContents from '../sidebar/SidebarContents';\nimport Login from '../modals/Login';\nimport Delete from '../modals/Delete';\nimport CreateAccount from '../modals/CreateAccount';\nimport { GET_DB_TODOS } from '../../cache/queries';\nimport * as mutations from '../../cache/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } from 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, UpdateListItems_Transaction, ReorderItems_Transaction, EditItem_Transaction } from '../../utils/jsTPS';\nimport WInput from 'wt-frontend/build/components/winput/WInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Homescreen = props => {\n  _s();\n\n  let todolists = [];\n  const [activeList, setActiveList] = useState({});\n  const [showDelete, toggleShowDelete] = useState(false);\n  const [showLogin, toggleShowLogin] = useState(false);\n  const [showCreate, toggleShowCreate] = useState(false);\n  const [ReorderTodoItems] = useMutation(mutations.REORDER_ITEMS);\n  const [UpdateTodoItemField] = useMutation(mutations.UPDATE_ITEM_FIELD);\n  const [UpdateTodolistField] = useMutation(mutations.UPDATE_TODOLIST_FIELD);\n  const [DeleteTodolist] = useMutation(mutations.DELETE_TODOLIST);\n  const [DeleteTodoItem] = useMutation(mutations.DELETE_ITEM);\n  const [AddTodolist] = useMutation(mutations.ADD_TODOLIST);\n  const [AddTodoItem] = useMutation(mutations.ADD_ITEM);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_DB_TODOS);\n\n  if (loading) {\n    console.log(loading, 'loading');\n  }\n\n  if (error) {\n    console.log(error, 'error');\n  }\n\n  if (data) {\n    todolists = data.getAllTodos;\n  }\n\n  const auth = props.user === null ? false : true;\n\n  const refetchTodos = async refetch => {\n    const {\n      loading,\n      error,\n      data\n    } = await refetch();\n\n    if (data) {\n      todolists = data.getAllTodos;\n\n      if (activeList._id) {\n        let tempID = activeList._id;\n        let list = todolists.find(list => list._id === tempID);\n        setActiveList(list);\n      }\n    }\n  };\n\n  const tpsUndo = async () => {\n    const retVal = await props.tps.undoTransaction();\n    refetchTodos(refetch);\n    return retVal;\n  };\n\n  const tpsRedo = async () => {\n    const retVal = await props.tps.doTransaction();\n    refetchTodos(refetch);\n    return retVal;\n  }; // Creates a default item and passes it to the backend resolver.\n  // The return id is assigned to the item, and the item is appended\n  //  to the local cache copy of the active todolist. \n\n\n  const addItem = async () => {\n    let list = activeList;\n    const items = list.items;\n    const lastID = items.length >= 1 ? items[items.length - 1].id + 1 : 0;\n    const newItem = {\n      _id: '',\n      id: lastID,\n      description: 'No Description',\n      due_date: 'No Date',\n      assigned_to: props.user._id,\n      completed: false\n    };\n    let opcode = 1;\n    let itemID = newItem._id;\n    let listID = activeList._id;\n    let transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const deleteItem = async item => {\n    let listID = activeList._id;\n    let itemID = item._id;\n    let opcode = 0;\n    let itemToDelete = {\n      _id: item._id,\n      id: item.id,\n      description: item.description,\n      due_date: item.due_date,\n      assigned_to: item.assigned_to,\n      completed: item.completed\n    };\n    let transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const editItem = async (itemID, field, value, prev) => {\n    let flag = 0;\n    if (field === 'completed') flag = 1;\n    let listID = activeList._id;\n    let transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const reorderItem = async (itemID, dir) => {\n    let listID = activeList._id;\n    let transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const createNewList = async () => {\n    const length = todolists.length;\n    const id = length >= 1 ? todolists[length - 1].id + Math.floor(Math.random() * 100 + 1) : 1;\n    let list = {\n      _id: '',\n      id: id,\n      name: 'Untitled',\n      owner: props.user._id,\n      items: []\n    };\n    const {\n      data\n    } = await AddTodolist({\n      variables: {\n        todolist: list\n      },\n      refetchQueries: [{\n        query: GET_DB_TODOS\n      }]\n    });\n    setActiveList(list);\n  };\n\n  const deleteList = async _id => {\n    DeleteTodolist({\n      variables: {\n        _id: _id\n      },\n      refetchQueries: [{\n        query: GET_DB_TODOS\n      }]\n    });\n    refetch();\n    setActiveList({});\n  };\n\n  const updateListField = async (_id, field, value, prev) => {\n    let transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n    props.tps.addTransaction(transaction);\n    tpsRedo();\n  };\n\n  const handleSetActive = id => {\n    const todo = todolists.find(todo => todo.id === id || todo._id === id);\n    setActiveList(todo);\n  };\n  /*\n  \tSince we only have 3 modals, this sort of hardcoding isnt an issue, if there\n  \twere more it would probably make sense to make a general modal component, and\n  \ta modal manager that handles which to show.\n  */\n\n\n  const setShowLogin = () => {\n    toggleShowDelete(false);\n    toggleShowCreate(false);\n    toggleShowLogin(!showLogin);\n  };\n\n  const setShowCreate = () => {\n    toggleShowDelete(false);\n    toggleShowLogin(false);\n    toggleShowCreate(!showCreate);\n  };\n\n  const setShowDelete = () => {\n    toggleShowCreate(false);\n    toggleShowLogin(false);\n    toggleShowDelete(!showDelete);\n  };\n\n  return /*#__PURE__*/_jsxDEV(WLayout, {\n    wLayout: \"header-lside\",\n    children: [/*#__PURE__*/_jsxDEV(WLHeader, {\n      children: /*#__PURE__*/_jsxDEV(WNavbar, {\n        color: \"colored\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(WNavItem, {\n            children: /*#__PURE__*/_jsxDEV(Logo, {\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(NavbarOptions, {\n            fetchUser: props.fetchUser,\n            auth: auth,\n            setShowCreate: setShowCreate,\n            setShowLogin: setShowLogin,\n            refetchTodos: refetch,\n            setActiveList: setActiveList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(WLSide, {\n      side: \"left\",\n      children: /*#__PURE__*/_jsxDEV(WSidebar, {\n        children: activeList ? /*#__PURE__*/_jsxDEV(SidebarContents, {\n          todolists: todolists,\n          activeid: activeList.id,\n          auth: auth,\n          handleSetActive: handleSetActive,\n          createNewList: createNewList,\n          undo: tpsUndo,\n          redo: tpsRedo,\n          updateListField: updateListField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(WLMain, {\n      children: activeList ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-secondary\",\n        children: /*#__PURE__*/_jsxDEV(MainContents, {\n          addItem: addItem,\n          deleteItem: deleteItem,\n          editItem: editItem,\n          reorderItem: reorderItem,\n          setShowDelete: setShowDelete,\n          activeList: activeList,\n          setActiveList: setActiveList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 4\n    }, this), showDelete && /*#__PURE__*/_jsxDEV(Delete, {\n      deleteList: deleteList,\n      activeid: activeList._id,\n      setShowDelete: setShowDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 20\n    }, this), showCreate && /*#__PURE__*/_jsxDEV(CreateAccount, {\n      fetchUser: props.fetchUser,\n      setShowCreate: setShowCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 20\n    }, this), showLogin && /*#__PURE__*/_jsxDEV(Login, {\n      fetchUser: props.fetchUser,\n      refetchTodos: refetch,\n      setShowLogin: setShowLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Homescreen, \"7ONOgqoQs88DGn1zoM1bdi7+Axg=\", false, function () {\n  return [useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation, useQuery];\n});\n\n_c = Homescreen;\nexport default Homescreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"sources":["/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/homescreen/Homescreen.js"],"names":["React","useState","useEffect","Logo","NavbarOptions","MainContents","SidebarContents","Login","Delete","CreateAccount","GET_DB_TODOS","mutations","useMutation","useQuery","WNavbar","WSidebar","WNavItem","WLayout","WLHeader","WLMain","WLSide","UpdateListField_Transaction","UpdateListItems_Transaction","ReorderItems_Transaction","EditItem_Transaction","WInput","Homescreen","props","todolists","activeList","setActiveList","showDelete","toggleShowDelete","showLogin","toggleShowLogin","showCreate","toggleShowCreate","ReorderTodoItems","REORDER_ITEMS","UpdateTodoItemField","UPDATE_ITEM_FIELD","UpdateTodolistField","UPDATE_TODOLIST_FIELD","DeleteTodolist","DELETE_TODOLIST","DeleteTodoItem","DELETE_ITEM","AddTodolist","ADD_TODOLIST","AddTodoItem","ADD_ITEM","loading","error","data","refetch","console","log","getAllTodos","auth","user","refetchTodos","_id","tempID","list","find","tpsUndo","retVal","tps","undoTransaction","tpsRedo","doTransaction","addItem","items","lastID","length","id","newItem","description","due_date","assigned_to","completed","opcode","itemID","listID","transaction","addTransaction","deleteItem","item","itemToDelete","editItem","field","value","prev","flag","reorderItem","dir","createNewList","Math","floor","random","name","owner","variables","todolist","refetchQueries","query","deleteList","updateListField","handleSetActive","todo","setShowLogin","setShowCreate","setShowDelete","fetchUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } \tfrom 'react';\nimport Logo \t\t\t\t\t\t\tfrom '../navbar/Logo';\nimport NavbarOptions \t\t\t\t\tfrom '../navbar/NavbarOptions';\nimport MainContents \t\t\t\t\tfrom '../main/MainContents';\nimport SidebarContents \t\t\t\t\tfrom '../sidebar/SidebarContents';\nimport Login \t\t\t\t\t\t\tfrom '../modals/Login';\nimport Delete \t\t\t\t\t\t\tfrom '../modals/Delete';\nimport CreateAccount \t\t\t\t\tfrom '../modals/CreateAccount';\nimport { GET_DB_TODOS } \t\t\t\tfrom '../../cache/queries';\nimport * as mutations \t\t\t\t\tfrom '../../cache/mutations';\nimport { useMutation, useQuery } \t\tfrom '@apollo/client';\nimport { WNavbar, WSidebar, WNavItem } \tfrom 'wt-frontend';\nimport { WLayout, WLHeader, WLMain, WLSide } from 'wt-frontend';\nimport { UpdateListField_Transaction, \n\tUpdateListItems_Transaction, \n\tReorderItems_Transaction, \n\tEditItem_Transaction } \t\t\t\tfrom '../../utils/jsTPS';\nimport WInput from 'wt-frontend/build/components/winput/WInput';\n\n\nconst Homescreen = (props) => {\n\n\tlet todolists \t\t\t\t\t\t\t= [];\n\tconst [activeList, setActiveList] \t\t= useState({});\n\tconst [showDelete, toggleShowDelete] \t= useState(false);\n\tconst [showLogin, toggleShowLogin] \t\t= useState(false);\n\tconst [showCreate, toggleShowCreate] \t= useState(false);\n\n\tconst [ReorderTodoItems] \t\t= useMutation(mutations.REORDER_ITEMS);\n\tconst [UpdateTodoItemField] \t= useMutation(mutations.UPDATE_ITEM_FIELD);\n\tconst [UpdateTodolistField] \t= useMutation(mutations.UPDATE_TODOLIST_FIELD);\n\tconst [DeleteTodolist] \t\t\t= useMutation(mutations.DELETE_TODOLIST);\n\tconst [DeleteTodoItem] \t\t\t= useMutation(mutations.DELETE_ITEM);\n\tconst [AddTodolist] \t\t\t= useMutation(mutations.ADD_TODOLIST);\n\tconst [AddTodoItem] \t\t\t= useMutation(mutations.ADD_ITEM);\n\n\n\tconst { loading, error, data, refetch } = useQuery(GET_DB_TODOS);\n\tif(loading) { console.log(loading, 'loading'); }\n\tif(error) { console.log(error, 'error'); }\n\tif(data) { todolists = data.getAllTodos; }\n\n\tconst auth = props.user === null ? false : true;\n\n\tconst refetchTodos = async (refetch) => {\n\t\tconst { loading, error, data } = await refetch();\n\t\tif (data) {\n\t\t\ttodolists = data.getAllTodos;\n\t\t\tif (activeList._id) {\n\t\t\t\tlet tempID = activeList._id;\n\t\t\t\tlet list = todolists.find(list => list._id === tempID);\n\t\t\t\tsetActiveList(list);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst tpsUndo = async () => {\n\t\tconst retVal = await props.tps.undoTransaction();\n\t\trefetchTodos(refetch);\n\t\treturn retVal;\n\t}\n\n\tconst tpsRedo = async () => {\n\t\tconst retVal = await props.tps.doTransaction();\n\t\trefetchTodos(refetch);\n\t\treturn retVal;\n\t}\n\n\n\t// Creates a default item and passes it to the backend resolver.\n\t// The return id is assigned to the item, and the item is appended\n\t//  to the local cache copy of the active todolist. \n\tconst addItem = async () => {\n\t\tlet list = activeList;\n\t\tconst items = list.items;\n\t\tconst lastID = items.length >= 1 ? items[items.length - 1].id + 1 : 0;\n\t\tconst newItem = {\n\t\t\t_id: '',\n\t\t\tid: lastID,\n\t\t\tdescription: 'No Description',\n\t\t\tdue_date: 'No Date',\n\t\t\tassigned_to: props.user._id,\n\t\t\tcompleted: false\n\t\t};\n\t\tlet opcode = 1;\n\t\tlet itemID = newItem._id;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, newItem, opcode, AddTodoItem, DeleteTodoItem);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\n\tconst deleteItem = async (item) => {\n\t\tlet listID = activeList._id;\n\t\tlet itemID = item._id;\n\t\tlet opcode = 0;\n\t\tlet itemToDelete = {\n\t\t\t_id: item._id,\n\t\t\tid: item.id,\n\t\t\tdescription: item.description,\n\t\t\tdue_date: item.due_date,\n\t\t\tassigned_to: item.assigned_to,\n\t\t\tcompleted: item.completed\n\t\t}\n\t\tlet transaction = new UpdateListItems_Transaction(listID, itemID, itemToDelete, opcode, AddTodoItem, DeleteTodoItem);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\t};\n\n\tconst editItem = async (itemID, field, value, prev) => {\n\t\tlet flag = 0;\n\t\tif (field === 'completed') flag = 1;\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new EditItem_Transaction(listID, itemID, field, prev, value, flag, UpdateTodoItemField);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst reorderItem = async (itemID, dir) => {\n\t\tlet listID = activeList._id;\n\t\tlet transaction = new ReorderItems_Transaction(listID, itemID, dir, ReorderTodoItems);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst createNewList = async () => {\n\t\tconst length = todolists.length\n\t\tconst id = length >= 1 ? todolists[length - 1].id + Math.floor((Math.random() * 100) + 1) : 1;\n\t\tlet list = {\n\t\t\t_id: '',\n\t\t\tid: id,\n\t\t\tname: 'Untitled',\n\t\t\towner: props.user._id,\n\t\t\titems: [],\n\t\t}\n\t\tconst { data } = await AddTodolist({ variables: { todolist: list }, refetchQueries: [{ query: GET_DB_TODOS }] });\n\t\tsetActiveList(list)\n\t};\n\n\tconst deleteList = async (_id) => {\n\t\tDeleteTodolist({ variables: { _id: _id }, refetchQueries: [{ query: GET_DB_TODOS }] });\n\t\trefetch();\n\t\tsetActiveList({});\n\t};\n\n\tconst updateListField = async (_id, field, value, prev) => {\n\t\tlet transaction = new UpdateListField_Transaction(_id, field, prev, value, UpdateTodolistField);\n\t\tprops.tps.addTransaction(transaction);\n\t\ttpsRedo();\n\n\t};\n\n\tconst handleSetActive = (id) => {\n\t\tconst todo = todolists.find(todo => todo.id === id || todo._id === id);\n\t\tsetActiveList(todo);\n\t};\n\n\t\n\t/*\n\t\tSince we only have 3 modals, this sort of hardcoding isnt an issue, if there\n\t\twere more it would probably make sense to make a general modal component, and\n\t\ta modal manager that handles which to show.\n\t*/\n\tconst setShowLogin = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(!showLogin);\n\t};\n\n\tconst setShowCreate = () => {\n\t\ttoggleShowDelete(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowCreate(!showCreate);\n\t};\n\n\tconst setShowDelete = () => {\n\t\ttoggleShowCreate(false);\n\t\ttoggleShowLogin(false);\n\t\ttoggleShowDelete(!showDelete)\n\t}\n\n\treturn (\n\t\t<WLayout wLayout=\"header-lside\">\n\t\t\t<WLHeader>\n\t\t\t\t<WNavbar color=\"colored\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<WNavItem>\n\t\t\t\t\t\t\t<Logo className='logo' />\n\t\t\t\t\t\t</WNavItem>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<NavbarOptions\n\t\t\t\t\t\t\tfetchUser={props.fetchUser} auth={auth} \n\t\t\t\t\t\t\tsetShowCreate={setShowCreate} setShowLogin={setShowLogin}\n\t\t\t\t\t\t\trefetchTodos={refetch} setActiveList={setActiveList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ul>\n\t\t\t\t</WNavbar>\n\t\t\t</WLHeader>\n\n\t\t\t<WLSide side=\"left\">\n\t\t\t\t<WSidebar>\n\t\t\t\t\t{\n\t\t\t\t\t\tactiveList ?\n\t\t\t\t\t\t\t<SidebarContents\n\t\t\t\t\t\t\t\ttodolists={todolists} activeid={activeList.id} auth={auth}\n\t\t\t\t\t\t\t\thandleSetActive={handleSetActive} createNewList={createNewList}\n\t\t\t\t\t\t\t\tundo={tpsUndo} redo={tpsRedo}\n\t\t\t\t\t\t\t\tupdateListField={updateListField}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</WSidebar>\n\t\t\t</WLSide>\n\t\t\t<WLMain>\n\t\t\t\t{\n\t\t\t\t\tactiveList ? \n\t\t\t\t\t\t\t<div className=\"container-secondary\">\n\t\t\t\t\t\t\t\t<MainContents\n\t\t\t\t\t\t\t\t\taddItem={addItem} deleteItem={deleteItem}\n\t\t\t\t\t\t\t\t\teditItem={editItem} reorderItem={reorderItem}\n\t\t\t\t\t\t\t\t\tsetShowDelete={setShowDelete}\n\t\t\t\t\t\t\t\t\tactiveList={activeList} setActiveList={setActiveList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div className=\"container-secondary\" />\n\t\t\t\t}\n\n\t\t\t</WLMain>\n\n\t\t\t{\n\t\t\t\tshowDelete && (<Delete deleteList={deleteList} activeid={activeList._id} setShowDelete={setShowDelete} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowCreate && (<CreateAccount fetchUser={props.fetchUser} setShowCreate={setShowCreate} />)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\tshowLogin && (<Login fetchUser={props.fetchUser} refetchTodos={refetch}setShowLogin={setShowLogin} />)\n\t\t\t}\n\n\t\t</WLayout>\n\t);\n};\n\nexport default Homescreen;"]},"metadata":{},"sourceType":"module"}