{"ast":null,"code":"var _jsxFileName = \"/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/navbar/NavbarOptions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LOGOUT } from '../../cache/mutations';\nimport { useMutation, useApolloClient } from '@apollo/client';\nimport { WButton, WNavItem } from 'wt-frontend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoggedIn = props => {\n  _s();\n\n  const client = useApolloClient();\n  const [Logout] = useMutation(LOGOUT);\n\n  const handleLogout = async e => {\n    Logout();\n    const {\n      data\n    } = await props.fetchUser();\n\n    if (data) {\n      let reset = await client.resetStore();\n      if (reset) props.setActiveList({});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(WNavItem, {\n    hoverAnimation: \"lighten\",\n    children: /*#__PURE__*/_jsxDEV(WButton, {\n      className: \"navbar-options\",\n      onClick: handleLogout,\n      wType: \"texted\",\n      hoverAnimation: \"text-primary\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggedIn, \"5rmiQ0U+6I9DNntcs3QkXVfJvDY=\", false, function () {\n  return [useApolloClient, useMutation];\n});\n\n_c = LoggedIn;\n\nconst LoggedOut = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WNavItem, {\n      hoverAnimation: \"lighten\",\n      children: /*#__PURE__*/_jsxDEV(WButton, {\n        className: \"navbar-options\",\n        onClick: props.setShowLogin,\n        wType: \"texted\",\n        hoverAnimation: \"text-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WNavItem, {\n      hoverAnimation: \"lighten\",\n      children: /*#__PURE__*/_jsxDEV(WButton, {\n        className: \"navbar-options\",\n        onClick: props.setShowCreate,\n        wType: \"texted\",\n        hoverAnimation: \"text-primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = LoggedOut;\n\nconst NavbarOptions = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.auth === false ? /*#__PURE__*/_jsxDEV(LoggedOut, {\n      setShowLogin: props.setShowLogin,\n      setShowCreate: props.setShowCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(LoggedIn, {\n      fetchUser: props.fetchUser,\n      setActiveList: props.setActiveList,\n      logout: props.logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = NavbarOptions;\nexport default NavbarOptions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoggedIn\");\n$RefreshReg$(_c2, \"LoggedOut\");\n$RefreshReg$(_c3, \"NavbarOptions\");","map":{"version":3,"sources":["/Users/tommylin/Desktop/CSE316/cse316_hw3/client/src/components/navbar/NavbarOptions.js"],"names":["React","LOGOUT","useMutation","useApolloClient","WButton","WNavItem","LoggedIn","props","client","Logout","handleLogout","e","data","fetchUser","reset","resetStore","setActiveList","LoggedOut","setShowLogin","setShowCreate","NavbarOptions","auth","logout"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiD,OAAjD;AACA,SAASC,MAAT,QAAiD,uBAAjD;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAAiD,gBAAjD;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAiD,aAAjD;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,MAAM,GAAGL,eAAe,EAA9B;AACH,QAAM,CAACM,MAAD,IAAWP,WAAW,CAACD,MAAD,CAA5B;;AAEG,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BF,IAAAA,MAAM;AACN,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,SAAN,EAAvB;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIE,KAAK,GAAG,MAAMN,MAAM,CAACO,UAAP,EAAlB;AACA,UAAID,KAAJ,EAAWP,KAAK,CAACS,aAAN,CAAoB,EAApB;AACd;AACJ,GAPD;;AASA,sBACI,QAAC,QAAD;AAAU,IAAA,cAAc,EAAC,SAAzB;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAoC,MAAA,OAAO,EAAEN,YAA7C;AAA2D,MAAA,KAAK,EAAC,QAAjE;AAA0E,MAAA,cAAc,EAAC,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApBD;;GAAMJ,Q;UACaH,e,EACDD,W;;;KAFZI,Q;;AAsBN,MAAMW,SAAS,GAAIV,KAAD,IAAW;AACzB,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,cAAc,EAAC,SAAzB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,gBAAnB;AAAoC,QAAA,OAAO,EAAEA,KAAK,CAACW,YAAnD;AAAiE,QAAA,KAAK,EAAC,QAAvE;AAAgF,QAAA,cAAc,EAAC,cAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,QAAD;AAAU,MAAA,cAAc,EAAC,SAAzB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,gBAAnB;AAAoC,QAAA,OAAO,EAAEX,KAAK,CAACY,aAAnD;AAAkE,QAAA,KAAK,EAAC,QAAxE;AAAiF,QAAA,cAAc,EAAC,cAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAcH,CAfD;;MAAMF,S;;AAkBN,MAAMG,aAAa,GAAIb,KAAD,IAAW;AAC7B,sBACI;AAAA,cAEQA,KAAK,CAACc,IAAN,KAAe,KAAf,gBAAuB,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEd,KAAK,CAACW,YAA/B;AAA6C,MAAA,aAAa,EAAEX,KAAK,CAACY;AAAlE;AAAA;AAAA;AAAA;AAAA,YAAvB,gBACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEZ,KAAK,CAACM,SAA3B;AAAsC,MAAA,aAAa,EAAEN,KAAK,CAACS,aAA3D;AAA0E,MAAA,MAAM,EAAET,KAAK,CAACe;AAAxF;AAAA;AAAA;AAAA;AAAA;AAHV,mBADJ;AASH,CAVD;;MAAMF,a;AAYN,eAAeA,aAAf","sourcesContent":["import React                                from 'react';\nimport { LOGOUT }                           from '../../cache/mutations';\nimport { useMutation, useApolloClient }     from '@apollo/client';\nimport { WButton, WNavItem }                from 'wt-frontend';\n\nconst LoggedIn = (props) => {\n    const client = useApolloClient();\n\tconst [Logout] = useMutation(LOGOUT);\n\n    const handleLogout = async (e) => {\n        Logout();\n        const { data } = await props.fetchUser();\n        if (data) {\n            let reset = await client.resetStore();\n            if (reset) props.setActiveList({});\n        }\n    };\n\n    return (\n        <WNavItem hoverAnimation=\"lighten\">\n            <WButton className=\"navbar-options\" onClick={handleLogout} wType=\"texted\" hoverAnimation=\"text-primary\">\n                Logout\n            </WButton>\n        </WNavItem >\n    );\n};\n\nconst LoggedOut = (props) => {\n    return (\n        <>\n            <WNavItem hoverAnimation=\"lighten\">\n                <WButton className=\"navbar-options\" onClick={props.setShowLogin} wType=\"texted\" hoverAnimation=\"text-primary\">\n                    Login\n                </WButton>\n            </WNavItem>\n            <WNavItem hoverAnimation=\"lighten\">\n                <WButton className=\"navbar-options\" onClick={props.setShowCreate} wType=\"texted\" hoverAnimation=\"text-primary\"> \n                    Sign Up \n                </WButton>\n            </WNavItem>\n        </>\n    );\n};\n\n\nconst NavbarOptions = (props) => {\n    return (\n        <>\n            {\n                props.auth === false ? <LoggedOut setShowLogin={props.setShowLogin} setShowCreate={props.setShowCreate} />\n                : <LoggedIn fetchUser={props.fetchUser} setActiveList={props.setActiveList} logout={props.logout} />\n            }\n        </>\n\n    );\n};\n\nexport default NavbarOptions;"]},"metadata":{},"sourceType":"module"}